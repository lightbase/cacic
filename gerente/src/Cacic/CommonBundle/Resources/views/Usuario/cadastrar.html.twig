{% extends '::base.html.twig' %}

{% block headline %}

{% endblock %}

{% block body %}

<div class="span8">
	<div class="widget">
		<div class="widget-content">
			<div class="page-header">
				<h3>Cadastro de novo usuário</h3>
				{{ form.get('idUsuario') }}
			</div>
			
			<form id="formCadastroUsuario" action="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) }}" method="post" {{ form_enctype(form) }}>
		
				{{ form_widget(form) }}
				{{ form_rest(form) }}
			
				<div class="form-actions">
					<button type="reset" class="btn">
						<i class="icon-refresh"></i>
						Resetar Valores
					</button>
					<button type="submit" class="btn btn-primary">
						<i class="icon-ok-sign"></i>
						Salvar Dados
					</button>
				</div>
			
			</form>
			<hr />
			<div>
				<a class="btn btn-danger"  href="{{ path('cacic_usuario_index') }}">
					<i class="icon-remove-sign"></i>
					Cancelar
				</a>
			</div>
		
		</div> <!-- /widget-content -->
	</div> <!-- /widget -->
</div> <!-- /span8 -->
	      	
	      	
<div class="span4">
	<div class="widget widget-box">
		<div class="widget-header">
			<i class="icon-info-sign"></i>
			<h3>Informações Adicionais</h3>
		</div> <!-- /widget-header -->
					
		<div class="widget-content">
			<p>
				As informações que deverão ser cadastradas abaixo referem-se aos usuários do sistema, onde será determinado o tipo de acesso. 
				A senha inicial será gerada automaticamente em função da identificação e poderá ser trocada pelo usuário na opção
				<br /><br /> 
				<b>Meus Dados (Menu no canto superior direito) - Alterar Senha</b>.
				<br /><br />
				Após o logon, serão exibidas a primeira e última parte do campo Nome completo.
			</p>
		</div> <!-- /widget-content -->
	</div> <!-- /widget-box -->
</div>

<script type="text/javascript">
	
	var oLocais = []; // JSON com Locais
	var oGrupoDesc = { // JSON com descricao dos grupos
		{% for grupo in grupoDesc %}
		{{ grupo['idGrupoUsuarios'] }}: "{{ grupo['teDescricaoGrupo'] }}"{% if loop.last != true %},{% endif %}
		{% endfor %}
	};

	/**
	 * Monta JSON com lista de Locais
	 */
	$(document).ready(function(){
		$( '#usuario_localPrimario option' ).each(function(){
			if ( $(this).val() != '' && $(this).val() != undefined )
			{
				oLocais.push({ idLocal: $(this).val(), nmLocal: $(this).text() });
			}
		})
		
		// Verifica se já há algum local primário pré-selecionado para retirá-lo da lista de locais secundários
		if ( $( '#usuario_localPrimario' ).val() != '' && $( '#usuario_localPrimario' ).val() != undefined )
		{
			$( '#usuario_SelectLocaisSecundarios option[value='+ $( '#usuario_localPrimario' ).val() +']' ).remove();
		}
	});

	/**
	 * Remove o local principal selecionado da lista de locais secundários
	 */
	$( '#usuario_localPrimario' ).change(function(){
		// Primeiro, remove todos os itens da combo de locais secundários
		$( '#usuario_SelectLocaisSecundarios option' ).each(function(){
			$(this).remove();
		});
		
		// Preenche novamente o select de locais secundários, omitindo o elemento selecionado no combo de Local Principal
		for ( var i in oLocais )
		{
			if ( oLocais[i].idLocal != $(this).val() )
			{
				var sOption = '<option value="'+ oLocais[i].idLocal +'">'+ oLocais[i].nmLocal +'</option>';
				$( '#usuario_SelectLocaisSecundarios' ).append( sOption );
			}
		}
	});
	
	/**
	 * Configura os campos hidden (local primário, servidor autenticação e locais secundários) baseado nos valores selecionados nas combos
	 */
	 $( '#formCadastroUsuario' ).submit(function(){
		 $( '#usuario_teLocaisSecundarios' ).val( $( '#usuario_SelectLocaisSecundarios' ).val() );
		 $( '#usuario_idLocal' ).val( $( '#usuario_localPrimario' ).val() );
		 $( '#usuario_idServidorAutenticacao' ).val( $( '#usuario_servidorAutenticacao' ).val() );
		 $( '#usuario_idGrupoUsuarios' ).val( $( '#usuario_grupo' ).val() );
		 return true;
	 });
	
	$( '#usuario_grupo' ).change( function(){
		$( '#usuario_te_descricao_grupo' ).val( oGrupoDesc[ $( this ).val() ] );
	});
	
</script>
{% endblock %}