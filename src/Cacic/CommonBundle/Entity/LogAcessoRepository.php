<?php

namespace Cacic\CommonBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LogAcessoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogAcessoRepository extends EntityRepository
{
    /**
     * Função que retorna o último acesso para o computador solicitado
     *
     * @param $computador
     */
    public function ultimoAcesso( $computador ) {
        $qb = $this->createQueryBuilder('acesso')
            ->select('acesso')
            ->where('acesso.idComputador = :computador')
            ->orderBy('acesso.data', 'desc')
            ->setMaxResults(1)
            ->setParameter('computador', $computador );

        return $qb->getQuery()->getOneOrNullResult();
    }


    /**
     *
     * Realiza pesquisa por LOGs de ACESSO ou ATIVIDADES segundo parâmetros informados
     * @param string|array $tipoPesquisa
     * @param date $dataInicio
     * @param date $dataFim
     * @param array $locais
     */
    public function pesquisar( $dataInicio, $dataFim, $locais )
    {
        // Monta a Consulta básica...
        $query = $this->createQueryBuilder('log')
            ->select('rede.idRede', 'rede.nmRede', 'rede.teIpRede', 'loc.nmLocal', 'loc.sgLocal', 'COUNT(log.idComputador) as numComp')
            ->innerJoin('log.idComputador', 'comp')
            ->innerJoin('comp.idRede', 'rede')
            ->innerJoin('rede.idLocal', 'loc')
            ->groupBy('rede', 'loc.nmLocal', 'loc.sgLocal');

        /**
         * Verifica os filtros que foram parametrizados
         */
        if ( $dataInicio )
            $query->andWhere( 'log.data >= :dtInicio' )->setParameter('dtInicio', ( $dataInicio.' 00:00:00' ));

        if ( $dataFim )
            $query->andWhere( 'log.data <= :dtFim' )->setParameter('dtFim', ( $dataFim.' 23:59:59' ));

        if ( count($locais) )
            $query->andWhere( 'loc.idLocal IN (:locais)' )->setParameter('locais', $locais);

        return $query->getQuery()->execute();
    }

}
