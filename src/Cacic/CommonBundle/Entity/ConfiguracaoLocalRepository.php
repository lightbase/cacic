<?php

namespace Cacic\CommonBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ConfiguracaoLocalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConfiguracaoLocalRepository extends EntityRepository
{
	/**
	 * 
	 * Lista as configurações do Local informado
	 * @param int $idLocal
	 * @return array
	 */
	public function listarPorLocal( $idLocal )
	{
		$_dql = "SELECT cl.vlConfiguracao, cp.idConfiguracao, cp.nmConfiguracao
				FROM CacicCommonBundle:ConfiguracaoLocal cl
				JOIN cl.idConfiguracao cp
				WHERE cl.idLocal = :idLocal";

        return $this->getEntityManager()
        			->createQuery( $_dql )
        			->setParameter( 'idLocal', $idLocal )
        			->getArrayResult();
	}
	
	/**
	 * 
	 * Recupera um array na forma [idConfiguracao] => [vlConfiguracao]
	 * @param int $idLocal
	 * @return array
	 */
	public function getArrayChaveValor( $idLocal )
	{
		$configuracoes = $this->listarPorLocal( $idLocal );
		$return = array();
		
		foreach ( $configuracoes as $config )
		{
			$return[ $config['idConfiguracao'] ] = $config[ 'vlConfiguracao' ];
		}
		
		return $return;
	}
	
	/**
	 * 
	 * Cria as configurações locais à partir da configuração padrão do CACIC
	 * @param Local $local
	 * @param EntityManager $em
	 */
	public function configurarLocalFromConfigPadrao( $local, $em )
	{
		$em = $this->getEntityManager();
		$padrao = $em->getRepository('CacicCommonBundle:ConfiguracaoPadrao')->findAll(); // Recupera todas as Configurações-Padrão
		
		foreach( $padrao as $confPadrao )
		{
			$confLocal = new ConfiguracaoLocal();
			$confLocal->setIdLocal( $local );
			$confLocal->setIdConfiguracao( $confPadrao );
			$confLocal->setVlConfiguracao( $confPadrao->getVlConfiguracao() );
			$em->persist( $confLocal );
		}
		
		$em->flush();
	}

    public function listarNotificacaoPorLocal( $idLocal )
    {
        $_dql = "SELECT cl, cp
				FROM CacicCommonBundle:ConfiguracaoLocal cl
				JOIN cl.idConfiguracao cp
				WHERE cl.idLocal = :idLocal AND
				cp.nmConfiguracao = 'te_notificar_mudancas_emails' OR
				cp.nmConfiguracao = 'te_notificar_mudancas_properties' AND
				cl.vlConfiguracao IS NOT NULL";

        return $this->getEntityManager()
            ->createQuery( $_dql )
            ->setParameter( 'idLocal', $idLocal )
            ->getArrayResult();
    }
}
